// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Statline.StatTracUploader.Infrastructure.Persistence.Ef.SqlServer;

namespace Statline.StatTracUploader.Infrastructure.Persistence.Ef.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerReferralDbContext))]
    partial class SqlServerReferralDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Statline.StatTracUploader.Domain.Temporary.ReferralUpload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("AddedToSystemOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SourceFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReferralUploads");
                });

            modelBuilder.Entity("Statline.StatTracUploader.Domain.Temporary.ReferralUpload", b =>
                {
                    b.OwnsOne("Statline.StatTracUploader.Domain.Temporary.Referral", "Referral", b1 =>
                        {
                            b1.Property<Guid>("ReferralUploadId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("AdmittedOn")
                                .HasColumnType("datetime2");

                            b1.Property<int?>("CallId")
                                .HasColumnType("int");

                            b1.Property<DateTimeOffset>("CallReceivedOn")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CallerSourceCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CauseOfDeath")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("DeclaredCardiacTimeOfDeath")
                                .HasColumnType("datetime2");

                            b1.Property<DateTimeOffset?>("EnteredOn")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset?>("ExtubationAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<bool>("Heartbeat")
                                .HasColumnType("bit");

                            b1.Property<int?>("Id")
                                .HasColumnType("int");

                            b1.Property<bool>("IsUpdate")
                                .HasColumnType("bit");

                            b1.Property<string>("MedicalHistory")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("ReferralNumer")
                                .HasColumnType("int");

                            b1.Property<byte>("Vent")
                                .HasColumnType("tinyint");

                            b1.HasKey("ReferralUploadId");

                            b1.ToTable("ReferralUploads");

                            b1.WithOwner()
                                .HasForeignKey("ReferralUploadId");

                            b1.OwnsOne("Statline.StatTracUploader.Domain.Common.PersonName", "CoordinatorName", b2 =>
                                {
                                    b2.Property<Guid>("ReferralUploadId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("FirstName")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("LastName")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ReferralUploadId");

                                    b2.ToTable("ReferralUploads");

                                    b2.WithOwner()
                                        .HasForeignKey("ReferralUploadId");
                                });

                            b1.OwnsOne("Statline.StatTracUploader.Domain.Temporary.CallerInformation", "CallerInformation", b2 =>
                                {
                                    b2.Property<Guid>("ReferralUploadId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Floor")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("HospitalName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Unit")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ReferralUploadId");

                                    b2.ToTable("ReferralUploads");

                                    b2.WithOwner()
                                        .HasForeignKey("ReferralUploadId");

                                    b2.OwnsOne("Statline.StatTracUploader.Domain.Common.PersonName", "CallerName", b3 =>
                                        {
                                            b3.Property<Guid>("CallerInformationReferralUploadId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("FirstName")
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("LastName")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("CallerInformationReferralUploadId");

                                            b3.ToTable("ReferralUploads");

                                            b3.WithOwner()
                                                .HasForeignKey("CallerInformationReferralUploadId");
                                        });

                                    b2.OwnsOne("Statline.StatTracUploader.Domain.Temporary.PhoneExtension", "Extension", b3 =>
                                        {
                                            b3.Property<Guid>("CallerInformationReferralUploadId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("varchar(10)");

                                            b3.HasKey("CallerInformationReferralUploadId");

                                            b3.ToTable("ReferralUploads");

                                            b3.WithOwner()
                                                .HasForeignKey("CallerInformationReferralUploadId");
                                        });

                                    b2.OwnsOne("Statline.StatTracUploader.Domain.Temporary.PhoneNumber", "PhoneNumber", b3 =>
                                        {
                                            b3.Property<Guid>("CallerInformationReferralUploadId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("AreaCode")
                                                .IsRequired()
                                                .HasColumnType("char(3)");

                                            b3.Property<string>("Number")
                                                .IsRequired()
                                                .HasColumnType("char(4)");

                                            b3.Property<string>("Prefix")
                                                .IsRequired()
                                                .HasColumnType("char(3)");

                                            b3.HasKey("CallerInformationReferralUploadId");

                                            b3.ToTable("ReferralUploads");

                                            b3.WithOwner()
                                                .HasForeignKey("CallerInformationReferralUploadId");
                                        });

                                    b2.Navigation("CallerName")
                                        .IsRequired();

                                    b2.Navigation("Extension");

                                    b2.Navigation("PhoneNumber")
                                        .IsRequired();
                                });

                            b1.OwnsOne("Statline.StatTracUploader.Domain.Temporary.PagingInformation", "PagingInformation", b2 =>
                                {
                                    b2.Property<Guid>("ReferralUploadId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("PagedBy")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool?>("PagedToClient")
                                        .HasColumnType("bit");

                                    b2.Property<DateTimeOffset?>("PagedToClientOn")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<DateTimeOffset?>("RePagedToClientOn")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("ReceivedBy")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool?>("ReferralPagedToHospital")
                                        .HasColumnType("bit");

                                    b2.HasKey("ReferralUploadId");

                                    b2.ToTable("ReferralUploads");

                                    b2.WithOwner()
                                        .HasForeignKey("ReferralUploadId");
                                });

                            b1.OwnsOne("Statline.StatTracUploader.Domain.Temporary.ReferralDonorPerson", "DonorPerson", b2 =>
                                {
                                    b2.Property<Guid>("ReferralUploadId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTimeOffset?>("DateOfBirth")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<byte?>("Gender")
                                        .HasColumnType("tinyint");

                                    b2.Property<string>("MedicalRecordNumber")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Race")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ReferralUploadId");

                                    b2.ToTable("ReferralUploads");

                                    b2.WithOwner()
                                        .HasForeignKey("ReferralUploadId");

                                    b2.OwnsOne("Statline.StatTracUploader.Domain.Common.PersonName", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("ReferralDonorPersonReferralUploadId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("FirstName")
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("LastName")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("ReferralDonorPersonReferralUploadId");

                                            b3.ToTable("ReferralUploads");

                                            b3.WithOwner()
                                                .HasForeignKey("ReferralDonorPersonReferralUploadId");
                                        });

                                    b2.OwnsOne("Statline.StatTracUploader.Domain.Temporary.PersonAge", "Age", b3 =>
                                        {
                                            b3.Property<Guid>("ReferralDonorPersonReferralUploadId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<byte>("Unit")
                                                .HasColumnType("tinyint");

                                            b3.Property<int>("Value")
                                                .HasColumnType("int");

                                            b3.HasKey("ReferralDonorPersonReferralUploadId");

                                            b3.ToTable("ReferralUploads");

                                            b3.WithOwner()
                                                .HasForeignKey("ReferralDonorPersonReferralUploadId");
                                        });

                                    b2.OwnsOne("Statline.StatTracUploader.Domain.Temporary.PersonWeight", "Weight", b3 =>
                                        {
                                            b3.Property<Guid>("ReferralDonorPersonReferralUploadId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<byte>("Unit")
                                                .HasColumnType("tinyint");

                                            b3.Property<float>("Value")
                                                .HasColumnType("real");

                                            b3.HasKey("ReferralDonorPersonReferralUploadId");

                                            b3.ToTable("ReferralUploads");

                                            b3.WithOwner()
                                                .HasForeignKey("ReferralDonorPersonReferralUploadId");
                                        });

                                    b2.Navigation("Age");

                                    b2.Navigation("Name");

                                    b2.Navigation("Weight");
                                });

                            b1.Navigation("CallerInformation")
                                .IsRequired();

                            b1.Navigation("CoordinatorName")
                                .IsRequired();

                            b1.Navigation("DonorPerson")
                                .IsRequired();

                            b1.Navigation("PagingInformation");
                        });

                    b.OwnsOne("Statline.StatTracUploader.Domain.Temporary.ReferralProcessingStatus", "ProcessingStatus", b1 =>
                        {
                            b1.Property<Guid>("ReferralUploadId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ErrorMessage")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<byte>("Status")
                                .HasColumnType("tinyint");

                            b1.HasKey("ReferralUploadId");

                            b1.ToTable("ReferralUploads");

                            b1.WithOwner()
                                .HasForeignKey("ReferralUploadId");
                        });

                    b.Navigation("ProcessingStatus")
                        .IsRequired();

                    b.Navigation("Referral")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
