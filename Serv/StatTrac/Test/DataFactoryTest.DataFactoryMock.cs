// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Statline.StatTrac.Data.Types;
using Statline.StatTrac.StatFile;
using static Statline.StatTrac.Data.Types.StatFileData;

namespace Test
{
    public partial class DataFactoryTest
    {
        /// <summary>
        /// Extends <see cref="DataFactory"/> with a constructor which allows
        /// passing some property values as just a POCO and converts it to a 
        /// <see cref="StatFileData.ExportFileRow"/> to pass to 
        /// the <see cref="DataFactory"/> constructor.
        /// </summary>
        class DataFactoryMock : DataFactory
        {
            public DataFactoryMock(
                DataFactoryMockState dataFactoryState,
                IFileOutput fileOutput,
                IXslTransformProvider xslTransformProvider)
                : base(BuildDataRow(dataFactoryState), fileOutput, xslTransformProvider)
            {
            }

            private static StatFileData.ExportFileRow BuildDataRow(
                DataFactoryMockState dataFactoryState)
            {
                var row = new ExportFileDataTable().NewExportFileRow();

                row.ExportFileFrequency = dataFactoryState.FileFrequency;
                row.ExportFileFrequencyQuantity = dataFactoryState.FileFrequencyQuantity;
                row.ExportFileOccursAt = dataFactoryState.FileRunTime;
                row.ExportFileTZ = dataFactoryState.TimeZone;
                row.ExportFileFromDate = dataFactoryState.LastStartDateTime;
                row.ExportFileToDate = dataFactoryState.LastEndDateTime;
                return row;
            }
        }
    }


}
