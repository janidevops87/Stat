/* The CSS Class that will be applied to the outer control.*/
.igiv_StatlineReportsControl
{
	background-color:Gainsboro;
	padding-bottom:30px;
}


/*
	This class should be used for setting any padding that might be 
	needed if the Header is placed above the control.
*/
.igiv_StatlineReportsHeaderPadding
{
}


/*
	This class should be used for adjusting the padding of the control
	to account for the additional size of the header and footer.
*/
.igiv_StatlineReportsFooterPadding
{
}


/*
	The CSS class that will be applied to the header. 
    The header can be absolutely positoned anywhere in the control, because the WebImageViewerhas an internal DIV that
    wraps the control with a position set to relative. </para>
*/
.igiv_StatlineReportsHeaderContentArea
{
	width: 100%;
	position: absolute;
	top: -20px;
	right: 0px;
	text-align:left;
}


/*The CSS class that will be applied to the Left Corner of the Header. */
.igiv_StatlineReportsHeaderContentLeft
{
}


/*The CSS class that will be applied to the actual content of the Header.*/
.igiv_StatlineReportsHeaderContent
{
}


/*The CSS class that will be applied to the Right Corner of the Header. */
.igiv_StatlineReportsHeaderContentRight
{
}


/*
	A TR that wraps the TopLeft, TopArea, and TopRight elements. 
    This CSS class is useful in setting the height of the entire row.
*/
.igiv_StatlineReportsHeaderArea
{
	margin-top:-20px;
	height: 14px;
}


/*
	The CSS class that will be applied to the footer. 
    The footer can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative. </para>
*/
.igiv_StatlineReportsFooterContentArea
{
	margin-top:-2px;
	margin-bottom:80px;
	text-align:left;
}


/*The CSS class that will be applied to the Left Corner of the Footer. */
.igiv_StatlineReportsFooterContentLeft
{
}


/*The CSS class that will be applied to the actual content of the Footer.*/
.igiv_StatlineReportsFooterContent
{
}


/* The CSS class that will be applied to the Right Corner of the Footer. */
.igiv_StatlineReportsFooterContentRight
{
}


/*
	 A TR that wraps the BottomLeft, BottomArea, and BottomRight elements. 
     This CSS class is useful in setting the height of the entire row.
*/
.igiv_StatlineReportsFooterArea
{
}


/*
	A TD that wraps the Header.
    This CSS Class should be used for applying a Background-Image along the top border of the control.
*/
.igiv_StatlineReportsEdgeTop
{
}


/*
	A TD on the left side of the ImageArea.
    This CSS Class should be used for applying a Background-Image along the left border of the control.
*/
.igiv_StatlineReportsEdgeLeft
{
}


/*
	A TD that wraps the Footer.
    This CSS Class should be used for applying a Background-Image along the bottom border of the control.
*/
.igiv_StatlineReportsEdgeBottom
{
}


/*
	 A TD on the right side of the ImageArea.
     This CSS Class should be used for applying a Background-Image along the right border of the control.
       
*/
.igiv_StatlineReportsEdgeRight
{
}


/*
	 The Top Left corner of the control.
     This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerTopLeft
{
	width: 14px;
}


/*
	The Top Right corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerTopRight
{
	width: 14px;
}


/*
	The Bottom Left corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerBottomLeft
{
}


/*
	The Bottom Right corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerBottomRight
{
}


/*
	The CSS class that will be applied to the Container of the Previous Button. 
    This css Class is the TD in which the Image element is rendered. This style can be used
    to set the vertical-align CSS attribute.
*/
.igiv_StatlineReportsPrevButtonArea
{
}


/*
	The CSS class that will be applied to the Previous Button. 
    The Previous Button can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative. 
*/
.igiv_StatlineReportsPrevButton
{
	cursor:pointer;
}


/*
	The CSS class that will be applied to the Container of the Next Button. 
    This css Class is the TD in which the Image element is rendered. This style can be used
    to set the vetical-align CSS attribute.
*/
.igiv_StatlineReportsNextButtonArea
{
	cursor:pointer;
}


/*
	The CSS class that will be applied to the Next Button. 
    The Next Button can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative.
*/
.igiv_StatlineReportsNextButton
{
}


/*
	A TD that contains the ImageArea.
    If you would like a border around the ImageArea, this is the class to use.
*/
.igiv_StatlineReportsImageAreaContainer
{
}


/*
	A DIV that contains all of the Images. 
    In XHTML, to apply a border around the images a padding-bottom must be set to the size of the 
	border-top-width plus the border-bottom-width.
*/
.igiv_StatlineReportsImageArea
{
}


/*
	An IMG element that is contained by the ImageAra.
    In XHTML, to apply a border around an image a padding-bottom must be set to the size of the 
	border-top-width plus the border-bottom-width on the ImageArea.
*/
.igiv_StatlineReportsImage
{
}


/*Applied to an IMG when it is selected.*/
.igiv_StatlineReportsImageSelected
{
}


/*Applied to an IMG when the mouse is over it.*/
.igiv_StatlineReportsImageHover
{
}


/*
	When an image is hovered, this style gets applied to all other images.
    A good use of this style is to apply an opacity to all other images that aren't being hovered, 
	so that the hovered image has more focus.
*/
.igiv_StatlineReportsOtherImageHover
{
	opacity: .5;
	filter: alpha(opacity=50);
}


/*Applied to an IMG when the image is disabled.*/
.igiv_StatlineReportsImageDisabled
{
	opacity: .25;
	filter: alpha(opacity=25);
}


/**************************** VERTICAL ***************************************/
/*The CSS Class that will be applied to the outer control.*/
.igiv_StatlineReportsControl_Vert
{
	background-color:Gainsboro;
	padding-bottom:30px;
}


/*
	This class should be used for setting any padding that might be 
	needed if the Header is placed above the control.
*/
.igiv_StatlineReportsHeaderPadding_Vert
{
}


/*
	This class should be used for adjusting the padding of the control
	to account for the additional size of the header and footer.
*/
.igiv_StatlineReportsFooterPadding_Vert
{
}


/*
	The CSS class that will be applied to the header. 
    The header can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative.
*/
.igiv_StatlineReportsHeaderContentArea_Vert
{
	width: 100%;
	position: absolute;
	top: -17px;
	right: 0px;
	text-align:left;
}


/*The CSS class that will be applied to the Left Corner of the Header. */
.igiv_StatlineReportsHeaderContentLeft_Vert
{
}


/*The CSS class that will be applied to the actual content of the Header.*/
.igiv_StatlineReportsHeaderContent_Vert
{
}


/*The CSS class that will be applied to the Right Corner of the Header. */
.igiv_StatlineReportsHeaderContentRight_Vert
{
}


/*
	A TR that wraps the TopLeft_Vert, TopArea_Vert, and TopRight_Vert elements. 
    This CSS class is useful in setting the height of the entire row.
*/
.igiv_StatlineReportsHeaderArea_Vert
{
	height: 14px;
	text-align:center;
}


/*
	The CSS class that will be applied to the footer. 
    The footer can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative. 
*/
.igiv_StatlineReportsFooterContentArea_Vert
{
	margin-top:12px;
	margin-bottom:10px;
	text-align:left;
}


/*The CSS class that will be applied to the Left Corner of the Footer. */
.igiv_StatlineReportsFooterContentLeft_Vert
{
}


/*The CSS class that will be applied to the actual content of the Footer.*/
.igiv_StatlineReportsFooterContent_Vert
{
}


/*The CSS class that will be applied to the Right Corner of the Footer. */
.igiv_StatlineReportsFooterContentRight_Vert
{
}


/*
	A TR that wraps the BottomLeft_Vert, BottomArea_Vert, and BottomRight_Vert elements. 
    This CSS class is useful in setting the height of the entire row.
*/
.igiv_StatlineReportsFooterArea_Vert
{
	text-align:center;
}


/*
	A TD that wraps the Header_Vert.
    This CSS Class should be used for applying a Background-Image along the top border of the control.
*/
.igiv_StatlineReportsEdgeTop_Vert
{
}


/*
	A TD on the left side of the ImageArea_Vert.
    This CSS Class should be used for applying a Background-Image along the left border of the control.
*/
.igiv_StatlineReportsEdgeLeft_Vert
{
}


/*
	A TD that wraps the Footer_Vert.
    This CSS Class should be used for applying a Background-Image along the bottom border of the control.
*/
.igiv_StatlineReportsEdgeBottom_Vert
{
}


/*
	A TD on the right side of the ImageArea_Vert.
    This CSS Class should be used for applying a Background-Image along the right border of the control.
*/
.igiv_StatlineReportsEdgeRight_Vert
{
}


/*
	The Top Left corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerTopLeft_Vert
{
	width: 14px;
}


/*
	The Top Right corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerTopRight_Vert
{
	width: 14px;
}


/*
	The Bottom Left corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerBottomLeft_Vert
{
}


/*
	The Bottom Right corner of the control.
    This CSS Class should be used for rounded corners.
*/
.igiv_StatlineReportsCornerBottomRight_Vert
{
}


/*
	The CSS class that will be applied to the Container of the PreviousButton. 
    This css Class is the TD in which the Image element is rendered. This style can be used
    to set the text-align CSS attribute.
*/
.igiv_StatlineReportsPrevButtonArea_Vert
{
}


/*
	The CSS class that will be applied to the Previous Button. 
    The Previous Button can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative. 
*/
.igiv_StatlineReportsPrevButton_Vert
{
	cursor:hand;
}


/*
	The CSS class that will be applied to the Container of the Next Button. 
    This css Class is the TD in which the Image element is rendered. This style can be used
    to set the text-align CSS attribute.
*/
.igiv_StatlineReportsNextButtonArea_Vert
{
}


/*
	The CSS class that will be applied to the Next Button. 
    The Next Button can be absolutely positoned anywhere in the control, because the WebImageViewer has an internal DIV that
    wraps the control with a position set to relative. 
*/
.igiv_StatlineReportsNextButton_Vert
{
	cursor:hand;
}


/*
	A TD that contains the ImageArea.
    If you would like a border around the ImageArea, this is the class to use.
*/
.igiv_StatlineReportsImageAreaContainer_Vert
{
}


/*
	A DIV that contains all of the Images. 
    In XHTML, to apply a border around the images a padding-right must be set to the size of the 
	border-left-width plus the border-right-width.
*/
.igiv_StatlineReportsImageArea_Vert
{
}


/*
	An IMG element that is contained by the ImageAra.
    In XHTML, to apply a border around an image a padding-right must be set to the size of the 
	border-left-width plus the border-right-width on the ImageArea_Vert.
*/
.igiv_StatlineReportsImage_Vert
{
}


/*Applied to an IMG when it is selected.*/
.igiv_StatlineReportsImageSelected_Vert
{
}


/*Applied to an IMG when the mouse is over it.*/
.igiv_StatlineReportsImageHover_Vert
{
}


/*
	When an image is hovered, this style gets applied to all other images.
    A good use of this style is to apply an opacity to all other images that aren't being hovered, 
	so that the hovered image has more focus.
*/
.igiv_StatlineReportsOtherImageHover_Vert
{
	opacity: .5;
	filter: alpha(opacity=50);
}


/*Applied to an IMG when the image is disabled.*/
.igiv_StatlineReportsImageDisabled_Vert
{
	opacity: .25;
	filter: alpha(opacity=25);
}


